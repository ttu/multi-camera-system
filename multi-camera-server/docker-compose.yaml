name: multi-camera-server

x-camera-common-variables: &camera-common-variables
  SERVER_HOST: "camera-server"
  DB_CONNECTION: "postgres://postgres:mysecretpassword@postgres:5432/camera_db"
  MINIO_ENDPOINT: "minio:9000"
  ENV: "development"

services:
  postgres:
    image: postgres:14.3-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 100ms
      timeout: 5s
      retries: 3000 # 5 minutes
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: mysecretpassword
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9090:9090
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 20s
      retries: 3
  camera-server:
    image: multi-camera-system
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "src/server_main.py"]
    volumes:
      - ./:/app:ro
    environment:
      UVICORN_HOST: "0.0.0.0"
      UVICORN_BASE_PATH: "/app/src/"
      <<: *camera-common-variables
    env_file:
      - ./.env
    depends_on:
      - postgres
      - minio
    ports:
      - 8000:8000
  camera-camera-0:
    image: multi-camera-system
    command: ["python", "-u", "src/camera_main.py", "--camera-id=0", "--dummy-mode=True"]
    environment:
      <<: *camera-common-variables
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      camera-server:
        condition: service_started
  camera-camera-1:
    image: multi-camera-system
    command: ["python", "-u", "src/camera_main.py", "--camera-id=1", "--dummy-mode=True"]
    environment:
      <<: *camera-common-variables
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      camera-server:
        condition: service_started
  camera-camera-2:  
    image: multi-camera-system
    command: ["python", "-u", "src/camera_main.py", "--camera-id=2", "--dummy-mode=True"]
    environment:
      <<: *camera-common-variables
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      camera-server:
        condition: service_started
  camera-ui:
    build:
      context: ../multi-camera-ui
      dockerfile: Dockerfile
    volumes:
      - ../multi-camera-ui:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://camera-server:8000
    depends_on:
      - camera-server
volumes:
  postgres_data:
  minio_data: